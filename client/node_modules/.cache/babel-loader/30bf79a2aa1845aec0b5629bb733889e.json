{"ast":null,"code":"import _classCallCheck from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/quezan/Desktop/ChowTimeTV/client/src/components/VideoDetail/VideoDetail.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // import { upvote } from '../../actions';\n\nimport reddit from '../../apis/reddit';\nimport ReactHtmlParser from 'react-html-parser';\nimport './VideoDetail.scss';\n\nvar VideoDetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VideoDetail, _React$Component);\n\n  function VideoDetail() {\n    _classCallCheck(this, VideoDetail);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(VideoDetail).apply(this, arguments));\n  }\n\n  _createClass(VideoDetail, [{\n    key: \"htmlDecode\",\n    // decodes escaped html\n    value: function htmlDecode(input) {\n      var e = document.createElement('div');\n      e.innerHTML = input;\n      return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n  }, {\n    key: \"renderVotes\",\n    value: function renderVotes() {\n      var _this = this;\n\n      var video = this.props.selectedVideo;\n      var arrowClass = \"fas fa-arrow-circle-right\";\n      var uparrowClass = \"\\n      \".concat(arrowClass, \" \\n      \").concat(video.likes === true ? 'orangeArrow' : '');\n      var downarrowClass = \"\\n      \".concat(arrowClass, \" \\n      \").concat(video.likes === false ? 'blueArrow' : '');\n\n      if (this.props.isSignedIn) {\n        return React.createElement(\"div\", {\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          onClick: function onClick(event) {\n            return _this.submitUpvote(video.id, event);\n          },\n          id: \"uparrow\",\n          className: uparrowClass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"likes\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, video.score), React.createElement(\"i\", {\n          onClick: function onClick(event) {\n            return _this.submitDownvote(video.id, event);\n          },\n          id: \"downarrow\",\n          className: downarrowClass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"likes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, video.score));\n    }\n  }, {\n    key: \"submitDownvote\",\n    value: function submitDownvote(postID, event) {\n      var downArrow = event.target;\n      var likes = downArrow.parentNode.children[1];\n      console.log(likes.innerHTML);\n      var numLikes = parseInt(likes.innerHTML);\n\n      if (!downArrow.classList.contains('blueArrow')) {\n        reddit.post('/downvote', {\n          postID: postID\n        });\n        var upArrow = downArrow.parentNode.children[0];\n        downArrow.classList.add('blueArrow');\n\n        if (upArrow.classList.contains('orangeArrow')) {\n          numLikes -= 2;\n          upArrow.classList.remove('orangeArrow');\n        } else {\n          numLikes -= 1;\n        }\n      } else {\n        downArrow.classList.remove('blueArrow');\n        numLikes += 1;\n      }\n\n      likes.innerHTML = numLikes;\n    }\n  }, {\n    key: \"submitUpvote\",\n    value: function submitUpvote(postID, event) {\n      var upArrow = event.target;\n      var likes = upArrow.parentNode.children[1];\n      var numLikes = parseInt(likes.innerHTML);\n\n      if (!upArrow.classList.contains('orangeArrow')) {\n        reddit.post('/upvote', {\n          postID: postID\n        });\n        var downArrow = upArrow.parentNode.children[2];\n        upArrow.classList.add('orangeArrow');\n\n        if (downArrow.classList.contains('blueArrow')) {\n          downArrow.classList.remove('blueArrow');\n          numLikes = likes + 2;\n        } else {\n          numLikes = likes + 1;\n        }\n      } else {\n        upArrow.classList.remove('orangeArrow');\n        numLikes -= 1;\n      }\n\n      likes.innerHTML = numLikes;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var video = this.props.selectedVideo;\n\n      if (!video) {\n        return React.createElement(\"div\", {\n          className: \"ui active inverted dimmer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"ui text loader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, \"Loading...\"));\n      }\n\n      var iFrameHTML = video['secure_media']['oembed']['html'];\n      var redditLink = \"https://www.reddit.com/\".concat(video.permalink);\n      return React.createElement(\"div\", {\n        className: \"video-detail-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"video ui embed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, ReactHtmlParser(iFrameHTML)), React.createElement(\"div\", {\n        className: \"video-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, video.title), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: redditLink,\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fab fa-reddit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), this.renderVotes())));\n    }\n  }]);\n\n  return VideoDetail;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    selectedVideo: state.selectedVideo,\n    isSignedIn: state.isSignedIn.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps)(VideoDetail);","map":{"version":3,"sources":["/home/quezan/Desktop/ChowTimeTV/client/src/components/VideoDetail/VideoDetail.js"],"names":["React","connect","reddit","ReactHtmlParser","VideoDetail","input","e","document","createElement","innerHTML","childNodes","length","nodeValue","video","props","selectedVideo","arrowClass","uparrowClass","likes","downarrowClass","isSignedIn","event","submitUpvote","id","score","submitDownvote","postID","downArrow","target","parentNode","children","console","log","numLikes","parseInt","classList","contains","post","upArrow","add","remove","iFrameHTML","redditLink","permalink","title","renderVotes","Component","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n// import { upvote } from '../../actions';\nimport reddit from '../../apis/reddit';\nimport ReactHtmlParser from 'react-html-parser';\nimport './VideoDetail.scss';\n\nclass VideoDetail extends React.Component {\n  // decodes escaped html\n  htmlDecode(input) {\n    let e = document.createElement('div');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n  };\n\n  renderVotes() {\n    const video = this.props.selectedVideo;\n    let arrowClass= \"fas fa-arrow-circle-right\"\n    let uparrowClass = `\n      ${arrowClass} \n      ${ video.likes === true ? 'orangeArrow' : '' }`;\n    let downarrowClass = `\n      ${arrowClass} \n      ${ video.likes === false ? 'blueArrow' : '' }`;\n    if(this.props.isSignedIn) {\n      return (\n        <div className=\"col\">\n          <i \n            onClick={(event) => this.submitUpvote(video.id, event)} \n            id=\"uparrow\" \n            className={uparrowClass}></i>\n          <p className=\"likes\">{video.score}</p>\n          <i \n            onClick={(event) => this.submitDownvote(video.id, event)} \n            id=\"downarrow\" \n            className={downarrowClass}></i>             \n        </div>\n\n      );\n    }\n    return (\n      <div className=\"col\">\n        <p className=\"likes\">{video.score}</p>\n      </div>\n\n    );\n  }\n\n  submitDownvote(postID, event) {\n    let downArrow = event.target;\n    let likes = downArrow.parentNode.children[1];\n    console.log(likes.innerHTML)\n    let numLikes = parseInt(likes.innerHTML);\n    if(!downArrow.classList.contains('blueArrow')) {\n      reddit.post('/downvote', {postID:postID});\n      let upArrow = downArrow.parentNode.children[0];\n      downArrow.classList.add('blueArrow');\n      if(upArrow.classList.contains('orangeArrow')) {\n        numLikes -= 2;\n        upArrow.classList.remove('orangeArrow');\n      } else {\n        numLikes -= 1;\n      }\n    } else {\n      downArrow.classList.remove('blueArrow');\n      numLikes += 1;\n    }\n    likes.innerHTML = numLikes;\n  }\n  \n  submitUpvote(postID, event) {\n    let upArrow = event.target;\n    let likes = upArrow.parentNode.children[1];\n    let numLikes = parseInt(likes.innerHTML);\n    if(!upArrow.classList.contains('orangeArrow')) {\n      reddit.post('/upvote', {postID:postID});\n      let downArrow = upArrow.parentNode.children[2];\n      upArrow.classList.add('orangeArrow');\n      if(downArrow.classList.contains('blueArrow')) {\n        downArrow.classList.remove('blueArrow');\n        numLikes = likes + 2;\n      } else {\n        numLikes = likes + 1;\n      }\n    } else {\n      upArrow.classList.remove('orangeArrow');\n      numLikes -= 1;\n    }\n    likes.innerHTML = numLikes;\n  }\n\n  render() {\n    const video = this.props.selectedVideo;\n    if (!video) {\n      return ( \n        <div className=\"ui active inverted dimmer\">\n          <div className=\"ui text loader\">Loading...</div>\n        </div>\n      )\n    }\n    const iFrameHTML = video['secure_media']['oembed']['html'];\n    const redditLink = `https://www.reddit.com/${video.permalink}`;\n    return (\n      <div className=\"video-detail-container\">\n        <div className=\"video ui embed\">\n          {ReactHtmlParser(iFrameHTML)}\n          {/* {ReactHtmlParser(this.htmlDecode(iFrameHTML))} */}\n        </div>\n        <div className=\"video-info\">\n          <h2>{video.title}</h2>\n          <div className=\"row\">\n            <a href={redditLink} rel=\"noopener noreferrer\" target=\"_blank\">\n              <i className=\"fab fa-reddit\"></i>\n            </a>\n            {this.renderVotes()}\n          </div>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { \n    selectedVideo: state.selectedVideo,\n    isSignedIn: state.isSignedIn.isSignedIn \n  };\n}\n\nexport default connect(mapStateToProps)(VideoDetail);"]},"metadata":{},"sourceType":"module"}