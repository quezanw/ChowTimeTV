{"ast":null,"code":"import _classCallCheck from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/quezan/Desktop/ChowTimeTV/client/src/components/RedditAuth/RedditAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signInStatus } from '../../actions';\nimport './RedditAuth.scss';\n\nvar RedditAuth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RedditAuth, _React$Component);\n\n  function RedditAuth() {\n    _classCallCheck(this, RedditAuth);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RedditAuth).apply(this, arguments));\n  }\n\n  _createClass(RedditAuth, [{\n    key: \"componentDidMount\",\n    // constructor(props) {\n    //   super();\n    // }\n    value: function componentDidMount() {\n      this.props.signInStatus();\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      console.log(this.props.isSignedIn.isSignedIn);\n      var url = 'https://www.reddit.com/api/v1/authorize?client_id=06_IsJue03S96Q&response_type=code&state=this1is2a3random4string5&redirect_uri=http://localhost:3001/authorize&duration=permanent&scope=vote';\n\n      if (!this.props.isSignedIn.isSignedIn) {\n        return React.createElement(\"a\", {\n          className: \"signin-btn oauth-btn\",\n          href: url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20\n          },\n          __self: this\n        }, \"Login\");\n      } else {\n        return React.createElement(\"a\", {\n          className: \"signout-btn oauth-btn\",\n          href: \"localhost\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Logout\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"btn-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.renderButton());\n    }\n  }]);\n\n  return RedditAuth;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSignedIn: state.isSignedIn.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signInStatus: signInStatus\n})(RedditAuth);","map":{"version":3,"sources":["/home/quezan/Desktop/ChowTimeTV/client/src/components/RedditAuth/RedditAuth.js"],"names":["React","connect","signInStatus","RedditAuth","props","console","log","isSignedIn","url","renderButton","Component","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAO,mBAAP;;IAEMC,U;;;;;;;;;;;;;AACJ;AACA;AACA;wCAEoB;AAClB,WAAKC,KAAL,CAAWF,YAAX;AACD;;;mCAEc;AACbG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKF,KAAL,CAAWG,UAAX,CAAsBA,UAAlC;AACA,UAAIC,GAAG,GAAG,+LAAV;;AACA,UAAG,CAAC,KAAKJ,KAAL,CAAWG,UAAX,CAAsBA,UAA1B,EAAsC;AACpC,eACE;AAAG,UAAA,SAAS,EAAC,sBAAb;AAAoC,UAAA,IAAI,EAAEC,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAKD,OAND,MAMO;AACL,eACE;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAqC,UAAA,IAAI,EAAC,WAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD;AACF;;;6BAGQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKC,YAAL,EADH,CADF;AAKD;;;;EAlCsBT,KAAK,CAACU,S;;AAqC/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAAEL,IAAAA,UAAU,EAAEK,KAAK,CAACL,UAAN,CAAiBA;AAA/B,GAAL;AAAA,CAA7B;;AAGA,eAAeN,OAAO,CAACU,eAAD,EAAkB;AAACT,EAAAA,YAAY,EAAZA;AAAD,CAAlB,CAAP,CAAyCC,UAAzC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { signInStatus } from '../../actions';\nimport './RedditAuth.scss';\n\nclass RedditAuth extends React.Component {\n  // constructor(props) {\n  //   super();\n  // }\n\n  componentDidMount() {\n    this.props.signInStatus();\n  }\n\n  renderButton() {\n    console.log(this.props.isSignedIn.isSignedIn);\n    let url = 'https://www.reddit.com/api/v1/authorize?client_id=06_IsJue03S96Q&response_type=code&state=this1is2a3random4string5&redirect_uri=http://localhost:3001/authorize&duration=permanent&scope=vote';\n    if(!this.props.isSignedIn.isSignedIn) {\n      return (\n        <a className='signin-btn oauth-btn' href={url}>\n          Login\n        </a>\n      );\n    } else {\n      return (\n        <a className='signout-btn oauth-btn' href=\"localhost\">\n          Logout\n        </a>\n      );\n    }\n  }\n  \n\n  render() {\n    return (\n      <div className=\"btn-container\">\n        {this.renderButton()}\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({ isSignedIn: state.isSignedIn.isSignedIn });\n\n\nexport default connect(mapStateToProps, {signInStatus})(RedditAuth);"]},"metadata":{},"sourceType":"module"}