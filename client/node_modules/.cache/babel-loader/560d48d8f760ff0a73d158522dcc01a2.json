{"ast":null,"code":"import _classCallCheck from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/quezan/Desktop/ChowTimeTV/client/src/components/RedditAuth/RedditAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signInStatus, signOut } from '../../actions';\nimport './RedditAuth.scss';\n\nvar RedditAuth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RedditAuth, _React$Component);\n\n  function RedditAuth() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RedditAuth);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RedditAuth)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.generateRandomString = function (length) {\n      var text = '';\n      var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n      for (var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n      }\n\n      return text;\n    };\n\n    return _this;\n  }\n\n  _createClass(RedditAuth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.signInStatus();\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      var _this2 = this;\n\n      var url = 'https://www.reddit.com/api/v1/authorize?client_id=06_IsJue03S96Q&response_type=code&state=this1is2a3random4string5&redirect_uri=http://localhost:3001/authorize&duration=permanent&scope=vote';\n      console.log(this.props.isSignedIn);\n\n      if (!this.props.isSignedIn) {\n        return React.createElement(\"a\", {\n          className: \"signin-btn oauth-btn\",\n          href: url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, \"Login\");\n      } else {\n        return React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this2.props.signOut();\n          },\n          className: \"signout-btn oauth-btn\",\n          href: \"locahold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, \"Logout\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"btn-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.renderButton());\n    }\n  }]);\n\n  return RedditAuth;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSignedIn: state.isSignedIn.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signInStatus: signInStatus,\n  signOut: signOut\n})(RedditAuth);","map":{"version":3,"sources":["/home/quezan/Desktop/ChowTimeTV/client/src/components/RedditAuth/RedditAuth.js"],"names":["React","connect","signInStatus","signOut","RedditAuth","generateRandomString","length","text","possible","i","charAt","Math","floor","random","props","url","console","log","isSignedIn","renderButton","Component","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,eAAtC;AACA,OAAO,mBAAP;;IAEMC,U;;;;;;;;;;;;;;;;;;UAMJC,oB,GAAuB,UAAUC,MAAV,EAAkB;AACvC,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,QAAQ,GAAG,gEAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,EAA7B,EAAiC;AAC/BF,QAAAA,IAAI,IAAIC,QAAQ,CAACE,MAAT,CAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,QAAQ,CAACF,MAApC,CAAhB,CAAR;AACD;;AACD,aAAOC,IAAP;AACD,K;;;;;;;wCAXmB;AAClB,WAAKO,KAAL,CAAWZ,YAAX;AACD;;;mCAWc;AAAA;;AACb,UAAMa,GAAG,GAAG,+LAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWI,UAAvB;;AACA,UAAG,CAAC,KAAKJ,KAAL,CAAWI,UAAf,EAA2B;AACzB,eACE;AAAG,UAAA,SAAS,EAAC,sBAAb;AAAoC,UAAA,IAAI,EAAEH,GAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAKD,OAND,MAMO;AACL,eACE;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACD,KAAL,CAAWX,OAAX,EAAN;AAAA,WAAjB;AAA6C,UAAA,SAAS,EAAC,uBAAvD;AAA+E,UAAA,IAAI,EAAC,UAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD;AACF;;;6BAGQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKgB,YAAL,EADH,CADF;AAKD;;;;EAxCsBnB,KAAK,CAACoB,S;;AA2C/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAAEJ,IAAAA,UAAU,EAAEI,KAAK,CAACJ,UAAN,CAAiBA;AAA/B,GAAL;AAAA,CAA7B;;AAGA,eAAejB,OAAO,CAACoB,eAAD,EAAkB;AAACnB,EAAAA,YAAY,EAAZA,YAAD;AAAeC,EAAAA,OAAO,EAAPA;AAAf,CAAlB,CAAP,CAAkDC,UAAlD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { signInStatus, signOut } from '../../actions';\nimport './RedditAuth.scss';\n\nclass RedditAuth extends React.Component {\n\n  componentDidMount() {\n    this.props.signInStatus();\n  }\n\n  generateRandomString = function (length) {\n    var text = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  };\n\n  renderButton() {\n    const url = 'https://www.reddit.com/api/v1/authorize?client_id=06_IsJue03S96Q&response_type=code&state=this1is2a3random4string5&redirect_uri=http://localhost:3001/authorize&duration=permanent&scope=vote';\n    console.log(this.props.isSignedIn);\n    if(!this.props.isSignedIn) {\n      return (\n        <a className='signin-btn oauth-btn' href={url}>\n          Login\n        </a>\n      );\n    } else {\n      return (\n        <button onClick={() => this.props.signOut()} className='signout-btn oauth-btn' href=\"locahold\">\n          Logout\n        </button>\n      );\n    }\n  }\n  \n\n  render() {\n    return (\n      <div className=\"btn-container\">\n        {this.renderButton()}\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({ isSignedIn: state.isSignedIn.isSignedIn });\n\n\nexport default connect(mapStateToProps, {signInStatus, signOut})(RedditAuth);"]},"metadata":{},"sourceType":"module"}