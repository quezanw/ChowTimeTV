{"ast":null,"code":"import _classCallCheck from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/quezan/Desktop/ChowTimeTV/client/src/components/VideoDetail/VideoDetail.js\";\nimport React from 'react';\nimport { connect } from 'react-redux'; // import { upvote } from '../../actions';\n\nimport reddit from '../../apis/reddit';\nimport ReactHtmlParser from 'react-html-parser';\nimport './VideoDetail.scss';\n\nvar VideoDetail =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VideoDetail, _React$Component);\n\n  function VideoDetail() {\n    _classCallCheck(this, VideoDetail);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(VideoDetail).apply(this, arguments));\n  }\n\n  _createClass(VideoDetail, [{\n    key: \"htmlDecode\",\n    // decodes escaped html\n    value: function htmlDecode(input) {\n      var e = document.createElement('div');\n      e.innerHTML = input;\n      return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n    }\n  }, {\n    key: \"updatedVideoItem\",\n    value: function updatedVideoItem(videoID, score, likeStatus) {\n      for (var i = 0; i < this.props.videos.length; i++) {\n        if (this.props.videos[i].id === videoID) {\n          break;\n        }\n      }\n\n      this.props.videos[i].score = score;\n      this.props.videos[i].likes = likeStatus;\n    }\n  }, {\n    key: \"renderVotes\",\n    value: function renderVotes(video) {\n      var _this = this;\n\n      var arrowClass = \"fas fa-arrow-circle-right\";\n      var uparrowClass = \"\".concat(video.id, \" \").concat(arrowClass, \" \").concat(video.likes === true ? 'orangeArrow' : '');\n      var downarrowClass = \"\".concat(video.id, \" \").concat(arrowClass, \" \").concat(video.likes === false ? 'blueArrow' : '');\n\n      if (this.props.isSignedIn) {\n        return React.createElement(\"div\", {\n          className: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          onClick: function onClick(event) {\n            return _this.submitUpvote(video.id, event);\n          },\n          id: \"uparrow\",\n          className: uparrowClass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          className: \"likes \".concat(video.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, video.score), React.createElement(\"i\", {\n          onClick: function onClick(event) {\n            return _this.submitDownvote(video.id, event);\n          },\n          id: \"downarrow\",\n          className: downarrowClass,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(\"div\", {\n        className: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"likes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, video.score));\n    }\n  }, {\n    key: \"submitDownvote\",\n    value: function submitDownvote(postID, event) {\n      var downArrow = event.target;\n      var likes = downArrow.parentNode.children[1];\n      var numLikes = parseInt(likes.innerHTML);\n      var likeStatus;\n\n      if (!downArrow.classList.contains('blueArrow')) {\n        reddit.post('/downvote', {\n          postID: postID\n        });\n        var upArrow = downArrow.parentNode.children[0];\n        downArrow.classList.add('blueArrow');\n        likeStatus = false;\n\n        if (upArrow.classList.contains('orangeArrow')) {\n          numLikes -= 2;\n          upArrow.classList.remove('orangeArrow');\n        } else {\n          numLikes -= 1;\n        }\n      } else {\n        downArrow.classList.remove('blueArrow');\n        numLikes += 1;\n        likeStatus = null;\n        reddit.post('/unvote', {\n          postID: postID\n        });\n      }\n\n      this.updatedVideoItem(postID, numLikes, likeStatus);\n      likes.innerHTML = numLikes;\n    }\n  }, {\n    key: \"submitUpvote\",\n    value: function submitUpvote(postID, event) {\n      var upArrow = event.target;\n      var likes = upArrow.parentNode.children[1];\n      var numLikes = parseInt(likes.innerHTML);\n      var likeStatus;\n\n      if (!upArrow.classList.contains('orangeArrow')) {\n        reddit.post('/upvote', {\n          postID: postID\n        });\n        var downArrow = upArrow.parentNode.children[2];\n        upArrow.classList.add('orangeArrow');\n        likeStatus = true;\n\n        if (downArrow.classList.contains('blueArrow')) {\n          downArrow.classList.remove('blueArrow');\n          numLikes += 2;\n        } else {\n          numLikes += 1;\n        }\n      } else {\n        upArrow.classList.remove('orangeArrow');\n        numLikes -= 1;\n        likeStatus = null;\n        reddit.post('/unvote', {\n          postID: postID\n        });\n      }\n\n      this.updatedVideoItem(postID, numLikes, likeStatus);\n      likes.innerHTML = numLikes;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var video = this.props.selectedVideo;\n\n      if (!video) {\n        return React.createElement(\"div\", {\n          className: \"ui active inverted dimmer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"ui text loader\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, \"Loading...\"));\n      }\n\n      var iFrameHTML = video['secure_media']['oembed']['html'];\n      var redditLink = \"https://www.reddit.com/\".concat(video.permalink);\n      return React.createElement(\"div\", {\n        className: \"video-detail-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"video ui embed\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, ReactHtmlParser(iFrameHTML)), React.createElement(\"div\", {\n        className: \"video-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, video.title), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: redditLink,\n        rel: \"noopener noreferrer\",\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fab fa-reddit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      })), this.renderVotes(video))));\n    }\n  }]);\n\n  return VideoDetail;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    selectedVideo: state.selectedVideo,\n    isSignedIn: state.isSignedIn.isSignedIn,\n    videoDetails: state.videoDetails,\n    videos: state.videos\n  };\n};\n\nexport default connect(mapStateToProps)(VideoDetail);","map":{"version":3,"sources":["/home/quezan/Desktop/ChowTimeTV/client/src/components/VideoDetail/VideoDetail.js"],"names":["React","connect","reddit","ReactHtmlParser","VideoDetail","input","e","document","createElement","innerHTML","childNodes","length","nodeValue","videoID","score","likeStatus","i","props","videos","id","likes","video","arrowClass","uparrowClass","downarrowClass","isSignedIn","event","submitUpvote","submitDownvote","postID","downArrow","target","parentNode","children","numLikes","parseInt","classList","contains","post","upArrow","add","remove","updatedVideoItem","selectedVideo","iFrameHTML","redditLink","permalink","title","renderVotes","Component","mapStateToProps","state","videoDetails"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\n// import { upvote } from '../../actions';\nimport reddit from '../../apis/reddit';\nimport ReactHtmlParser from 'react-html-parser';\nimport './VideoDetail.scss';\n\nclass VideoDetail extends React.Component {\n  // decodes escaped html\n  htmlDecode(input) {\n    let e = document.createElement('div');\n    e.innerHTML = input;\n    return e.childNodes.length === 0 ? \"\" : e.childNodes[0].nodeValue;\n  };\n\n  updatedVideoItem(videoID, score, likeStatus) {\n    for(var i = 0; i < this.props.videos.length; i++) {\n      if(this.props.videos[i].id === videoID) {\n        break;\n      }\n    }\n    this.props.videos[i].score = score;\n    this.props.videos[i].likes = likeStatus;\n  }\n\n  renderVotes(video) {\n    let arrowClass = \"fas fa-arrow-circle-right\";\n    let uparrowClass = `${video.id} ${arrowClass} ${ video.likes === true ? 'orangeArrow' : '' }`;\n    let downarrowClass = `${video.id} ${arrowClass} ${ video.likes === false ? 'blueArrow' : '' }`;\n    if(this.props.isSignedIn) {\n      return (\n        <div className=\"col\">\n          <i \n            onClick={(event) => this.submitUpvote(video.id, event)} \n            id=\"uparrow\" \n            className={uparrowClass}></i>\n          <p className={`likes ${video.id}`}>{video.score}</p>\n          <i \n            onClick={(event) => this.submitDownvote(video.id, event)} \n            id=\"downarrow\" \n            className={downarrowClass}></i>             \n        </div>\n      );\n    }\n    return (\n      <div className=\"col\">\n        <p className=\"likes\">{video.score}</p>\n      </div>\n    );\n  }\n\n  submitDownvote(postID, event) {\n    let downArrow = event.target;\n    let likes = downArrow.parentNode.children[1];\n    let numLikes = parseInt(likes.innerHTML);\n    let likeStatus;\n    if(!downArrow.classList.contains('blueArrow')) {\n      reddit.post('/downvote', {postID:postID});\n      let upArrow = downArrow.parentNode.children[0];\n      downArrow.classList.add('blueArrow');\n      likeStatus = false;\n      if(upArrow.classList.contains('orangeArrow')) {\n        numLikes -= 2;\n        upArrow.classList.remove('orangeArrow');\n      } else {\n        numLikes -= 1;\n      }\n    } else {\n      downArrow.classList.remove('blueArrow');\n      numLikes += 1;\n      likeStatus = null;\n      reddit.post('/unvote', {postID:postID});\n    }\n    this.updatedVideoItem(postID, numLikes, likeStatus);\n    likes.innerHTML = numLikes;\n  }\n  \n  submitUpvote(postID, event) {\n    let upArrow = event.target;\n    let likes = upArrow.parentNode.children[1];\n    let numLikes = parseInt(likes.innerHTML);\n    let likeStatus;\n    if(!upArrow.classList.contains('orangeArrow')) {\n      reddit.post('/upvote', {postID:postID});\n      let downArrow = upArrow.parentNode.children[2];\n      upArrow.classList.add('orangeArrow');\n      likeStatus = true;\n      if(downArrow.classList.contains('blueArrow')) {\n        downArrow.classList.remove('blueArrow');\n        numLikes += 2;\n      } else {\n        numLikes += 1;\n      }\n    } else {\n      upArrow.classList.remove('orangeArrow');\n      numLikes -= 1;\n      likeStatus = null;\n      reddit.post('/unvote', {postID:postID});\n    }\n    this.updatedVideoItem(postID, numLikes, likeStatus);\n    likes.innerHTML = numLikes;\n  }\n\n  render() {\n    const video = this.props.selectedVideo;\n    if (!video) {\n      return ( \n        <div className=\"ui active inverted dimmer\">\n          <div className=\"ui text loader\">Loading...</div>\n        </div>\n      )\n    }\n    const iFrameHTML = video['secure_media']['oembed']['html'];\n    const redditLink = `https://www.reddit.com/${video.permalink}`;\n    return (\n      <div className=\"video-detail-container\">\n        <div className=\"video ui embed\">\n          {ReactHtmlParser(iFrameHTML)}\n          {/* {ReactHtmlParser(this.htmlDecode(iFrameHTML))} */}\n        </div>\n        <div className=\"video-info\">\n          <h2>{video.title}</h2>\n          <div className=\"row\">\n            <a href={redditLink} rel=\"noopener noreferrer\" target=\"_blank\">\n              <i className=\"fab fa-reddit\"></i>\n            </a>\n            {this.renderVotes(video)}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return { \n    selectedVideo: state.selectedVideo,\n    isSignedIn: state.isSignedIn.isSignedIn ,\n    videoDetails: state.videoDetails,\n    videos: state.videos\n  };\n}\n\nexport default connect(mapStateToProps)(VideoDetail);"]},"metadata":{},"sourceType":"module"}