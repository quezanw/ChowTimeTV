{"ast":null,"code":"import _classCallCheck from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/quezan/Desktop/ChowTimeTV/client/src/components/RedditAuth/RedditAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signInStatus } from '../../actions';\nimport './RedditAuth.scss';\n\nvar RedditAuth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RedditAuth, _React$Component);\n\n  function RedditAuth(props) {\n    _classCallCheck(this, RedditAuth);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RedditAuth).call(this));\n  }\n\n  _createClass(RedditAuth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.signInStatus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var url = 'https://www.reddit.com/api/v1/authorize?client_id=06_IsJue03S96Q&response_type=code&state=this1is2a3random4string5&redirect_uri=http://localhost:3001/authorize&duration=permanent&scope=vote';\n\n      if (!isSignedIn) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, \"Login\"));\n      } else {\n        return React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        });\n      }\n    }\n  }]);\n\n  return RedditAuth;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    signInStatus: state.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signIn: signIn,\n  signInStatus: signInStatus\n})(RedditAuth);","map":{"version":3,"sources":["/home/quezan/Desktop/ChowTimeTV/client/src/components/RedditAuth/RedditAuth.js"],"names":["React","connect","signIn","signInStatus","RedditAuth","props","url","isSignedIn","Component","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,MAAT,EAAiBC,YAAjB,QAAqC,eAArC;AACA,OAAO,mBAAP;;IAEMC,U;;;;;AACJ,sBAAYC,KAAZ,EAAmB;AAAA;;AAAA;AAElB;;;;wCAEmB;AAClB,WAAKA,KAAL,CAAWF,YAAX;AACD;;;6BAGQ;AAEP,UAAIG,GAAG,GAAG,+LAAV;;AACA,UAAG,CAACC,UAAJ,EAAgB;AACd,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAG,UAAA,IAAI,EAAED,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,CADF;AAOD,OARD,MAQO;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAGD;AACF;;;;EA1BsBN,KAAK,CAACQ,S;;AA6B/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAC/B,SAAO;AAAEP,IAAAA,YAAY,EAAEO,KAAK,CAACH;AAAtB,GAAP;AACD,CAFD;;AAIA,eAAeN,OAAO,CAACQ,eAAD,EAAkB;AAACP,EAAAA,MAAM,EAANA,MAAD;AAASC,EAAAA,YAAY,EAAZA;AAAT,CAAlB,CAAP,CAAiDC,UAAjD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { signIn, signInStatus } from '../../actions';\nimport './RedditAuth.scss';\n\nclass RedditAuth extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  componentDidMount() {\n    this.props.signInStatus();\n  }\n  \n\n  render() {\n\n    let url = 'https://www.reddit.com/api/v1/authorize?client_id=06_IsJue03S96Q&response_type=code&state=this1is2a3random4string5&redirect_uri=http://localhost:3001/authorize&duration=permanent&scope=vote';\n    if(!isSignedIn) {\n      return (\n        <div>\n          <a href={url}>\n            Login\n          </a>\n        </div>\n      );\n    } else {\n      return (\n        <button></button>\n      );\n    }\n  };\n}\n\nconst mapStateToProps = state => {\n  return { signInStatus: state.isSignedIn };\n}\n\nexport default connect(mapStateToProps, {signIn, signInStatus})(RedditAuth);"]},"metadata":{},"sourceType":"module"}