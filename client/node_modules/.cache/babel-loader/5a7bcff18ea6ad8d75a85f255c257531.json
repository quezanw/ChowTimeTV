{"ast":null,"code":"import _classCallCheck from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/quezan/Desktop/ChowTimeTV/client/src/components/RedditAuth/RedditAuth.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { signInStatus, signOut } from '../../actions';\nimport './RedditAuth.scss';\nimport snoowrap from 'snoowrap'; // import reddit from '../../apis/reddit';\n\nvar RedditAuth =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RedditAuth, _React$Component);\n\n  function RedditAuth() {\n    _classCallCheck(this, RedditAuth);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RedditAuth).apply(this, arguments));\n  }\n\n  _createClass(RedditAuth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.signInStatus();\n    }\n  }, {\n    key: \"generateRandomString\",\n    value: function generateRandomString(length) {\n      var text = '';\n      var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n      for (var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n      }\n\n      return text;\n    }\n  }, {\n    key: \"renderButton\",\n    value: function renderButton() {\n      var _this = this;\n\n      var HOST_URL = 'http://192.168.0.119'; // let HOST_URL = 'http://localhost'\n\n      var authenticationUrl = snoowrap.getAuthUrl({\n        clientId: '06_IsJue03S96Q',\n        scope: ['*'],\n        redirectUri: 'http://localhost:3001/authorize',\n        permanent: true,\n        state: this.generateRandomString(16)\n      }); // window.location = authenticationUrl;\n      // const url = `https://www.reddit.com/api/v1/authorize?client_id=06_IsJue03S96Q&response_type=code&state=${this.generateRandomString(16)}&redirect_uri=http://localhost:3001/authorize&duration=permanent&scope=vote%20idenity%20edit%20flair%20history%20save%20submit%20subscribe`;\n\n      if (!this.props.isSignedIn) {\n        return React.createElement(\"a\", {\n          className: \"signin-btn oauth-btn\",\n          href: authenticationUrl,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        }, \"Login\");\n      } else {\n        return React.createElement(\"button\", {\n          onClick: function onClick() {\n            return _this.props.signOut();\n          },\n          className: \"signout-btn oauth-btn\",\n          href: \"locahold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"Logout\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"btn-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, this.renderButton());\n    }\n  }]);\n\n  return RedditAuth;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    isSignedIn: state.isSignedIn.isSignedIn\n  };\n};\n\nexport default connect(mapStateToProps, {\n  signInStatus: signInStatus,\n  signOut: signOut\n})(RedditAuth);","map":{"version":3,"sources":["/home/quezan/Desktop/ChowTimeTV/client/src/components/RedditAuth/RedditAuth.js"],"names":["React","connect","signInStatus","signOut","snoowrap","RedditAuth","props","length","text","possible","i","charAt","Math","floor","random","HOST_URL","authenticationUrl","getAuthUrl","clientId","scope","redirectUri","permanent","state","generateRandomString","isSignedIn","renderButton","Component","mapStateToProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,eAAtC;AACA,OAAO,mBAAP;AACA,OAAOC,QAAP,MAAqB,UAArB,C,CACA;;IAEMC,U;;;;;;;;;;;;;wCAEgB;AAClB,WAAKC,KAAL,CAAWJ,YAAX;AACD;;;yCAEoBK,M,EAAQ;AAC3B,UAAIC,IAAI,GAAG,EAAX;AACA,UAAIC,QAAQ,GAAG,gEAAf;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,EAA7B,EAAiC;AAC/BF,QAAAA,IAAI,IAAIC,QAAQ,CAACE,MAAT,CAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,QAAQ,CAACF,MAApC,CAAhB,CAAR;AACD;;AACD,aAAOC,IAAP;AACD;;;mCAGc;AAAA;;AACb,UAAIO,QAAQ,GAAG,sBAAf,CADa,CAEb;;AACA,UAAIC,iBAAiB,GAAGZ,QAAQ,CAACa,UAAT,CAAoB;AAC1CC,QAAAA,QAAQ,EAAE,gBADgC;AAE1CC,QAAAA,KAAK,EAAE,CAAC,GAAD,CAFmC;AAG1CC,QAAAA,WAAW,EAAE,iCAH6B;AAI1CC,QAAAA,SAAS,EAAE,IAJ+B;AAK1CC,QAAAA,KAAK,EAAE,KAAKC,oBAAL,CAA0B,EAA1B;AALmC,OAApB,CAAxB,CAHa,CAWb;AACA;;AACA,UAAG,CAAC,KAAKjB,KAAL,CAAWkB,UAAf,EAA2B;AACzB,eACE;AAAG,UAAA,SAAS,EAAC,sBAAb;AAAoC,UAAA,IAAI,EAAER,iBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF;AAKD,OAND,MAMO;AACL,eACE;AAAQ,UAAA,OAAO,EAAE;AAAA,mBAAM,KAAI,CAACV,KAAL,CAAWH,OAAX,EAAN;AAAA,WAAjB;AAA6C,UAAA,SAAS,EAAC,uBAAvD;AAA+E,UAAA,IAAI,EAAC,UAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAKD;AACF;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKsB,YAAL,EADH,CADF;AAKD;;;;EAlDsBzB,KAAK,CAAC0B,S;;AAqD/B,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAL,KAAK;AAAA,SAAK;AAAEE,IAAAA,UAAU,EAAEF,KAAK,CAACE,UAAN,CAAiBA;AAA/B,GAAL;AAAA,CAA7B;;AAEA,eAAevB,OAAO,CAAC0B,eAAD,EAAkB;AAACzB,EAAAA,YAAY,EAAZA,YAAD;AAAeC,EAAAA,OAAO,EAAPA;AAAf,CAAlB,CAAP,CAAkDE,UAAlD,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { signInStatus, signOut } from '../../actions';\nimport './RedditAuth.scss';\nimport snoowrap from 'snoowrap';\n// import reddit from '../../apis/reddit';\n\nclass RedditAuth extends React.Component {\n\n  componentDidMount() {\n    this.props.signInStatus();\n  }\n\n  generateRandomString(length) {\n    var text = '';\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    for (var i = 0; i < length; i++) {\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return text;\n  };\n\n\n  renderButton() {\n    let HOST_URL = 'http://192.168.0.119';\n    // let HOST_URL = 'http://localhost'\n    var authenticationUrl = snoowrap.getAuthUrl({\n      clientId: '06_IsJue03S96Q',\n      scope: ['*'],\n      redirectUri: 'http://localhost:3001/authorize',\n      permanent: true,\n      state: this.generateRandomString(16)\n    });\n    \n    // window.location = authenticationUrl;\n    // const url = `https://www.reddit.com/api/v1/authorize?client_id=06_IsJue03S96Q&response_type=code&state=${this.generateRandomString(16)}&redirect_uri=http://localhost:3001/authorize&duration=permanent&scope=vote%20idenity%20edit%20flair%20history%20save%20submit%20subscribe`;\n    if(!this.props.isSignedIn) {\n      return (\n        <a className='signin-btn oauth-btn' href={authenticationUrl}>\n          Login\n        </a>\n      );\n    } else {\n      return (\n        <button onClick={() => this.props.signOut()} className='signout-btn oauth-btn' href=\"locahold\">\n          Logout\n        </button>\n      );\n    }\n  }\n  \n  render() {\n    return (\n      <div className=\"btn-container\">\n        {this.renderButton()}\n      </div>\n    );\n  };\n}\n\nconst mapStateToProps = state => ({ isSignedIn: state.isSignedIn.isSignedIn });\n\nexport default connect(mapStateToProps, {signInStatus, signOut})(RedditAuth);"]},"metadata":{},"sourceType":"module"}