{"ast":null,"code":"import _regeneratorRuntime from \"/home/quezan/Desktop/chowtime/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/quezan/Desktop/chowtime/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { SELECT_VIDEO, FETCH_NEW_VIDEOS, FETCH_HOT_VIDEOS, FETCH_FIVESEVEN_VIDEOS, FETCH_SEVENTEN_VIDEOS, FETCH_TENFIFTEEN_VIDEOS, FETCH_HALFHOUR_VIDEOS } from '../actions/types';\nimport reddit from '../apis/reddit'; // https://www.reddit.com/r/mealtimevideos/search.json?q=flair_name%3A%225-7%20Minutes%22&restrict_sr=1\n\nexport var selectVideo = function selectVideo(video) {\n  return {\n    type: 'SELECT_VIDEO',\n    payload: video\n  };\n};\nexport var fetchNewVideos = function fetchNewVideos() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return reddit.get('/new.json', {\n                  params: {}\n                });\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: FETCH_NEW_VIDEOS,\n                  payload: response.data.data.children\n                });\n                dispatch(selectVideo(response.data.data.children[0]));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchHotVideos = function fetchHotVideos() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return reddit.get('search?q=flair_name%3A\"5-7%20Minutes\"&restrict_sr=1', {\n                  params: {}\n                });\n\n              case 2:\n                response = _context2.sent;\n                console.log(response.data.data.children.pop());\n                dispatch({\n                  type: FETCH_HOT_VIDEOS,\n                  payload: response.data.data.children\n                });\n                dispatch(selectVideo(response.data.data.children[0]));\n\n              case 6:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/quezan/Desktop/chowtime/src/actions/index.js"],"names":["SELECT_VIDEO","FETCH_NEW_VIDEOS","FETCH_HOT_VIDEOS","FETCH_FIVESEVEN_VIDEOS","FETCH_SEVENTEN_VIDEOS","FETCH_TENFIFTEEN_VIDEOS","FETCH_HALFHOUR_VIDEOS","reddit","selectVideo","video","type","payload","fetchNewVideos","dispatch","get","params","response","data","children","fetchHotVideos","console","log","pop"],"mappings":";;AAAA,SACEA,YADF,EAEEC,gBAFF,EAGEC,gBAHF,EAIEC,sBAJF,EAKEC,qBALF,EAMEC,uBANF,EAOEC,qBAPF,QASK,kBATL;AAYA,OAAOC,MAAP,MAAmB,gBAAnB,C,CACA;;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAAAC,KAAK,EAAI;AAClC,SAAO;AACLC,IAAAA,IAAI,EAAE,cADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACXN,MAAM,CAACO,GAAP,CAAW,WAAX,EAAwB;AAAEC,kBAAAA,MAAM,EAAE;AAAV,iBAAxB,CADW;;AAAA;AAC5BC,gBAAAA,QAD4B;AAElCH,gBAAAA,QAAQ,CAAC;AAAEH,kBAAAA,IAAI,EAAET,gBAAR;AAA0BU,kBAAAA,OAAO,EAAEK,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC;AAAtD,iBAAD,CAAR;AACAL,gBAAAA,QAAQ,CAACL,WAAW,CAACQ,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC,QAAnB,CAA4B,CAA5B,CAAD,CAAZ,CAAR;;AAHkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB;AAMP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAM,kBAAMN,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACXN,MAAM,CAACO,GAAP,CAAW,qDAAX,EAAkE;AAAEC,kBAAAA,MAAM,EAAE;AAAV,iBAAlE,CADW;;AAAA;AAC5BC,gBAAAA,QAD4B;AAElCI,gBAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC,QAAnB,CAA4BI,GAA5B,EAAZ;AACAT,gBAAAA,QAAQ,CAAC;AAAEH,kBAAAA,IAAI,EAAER,gBAAR;AAA0BS,kBAAAA,OAAO,EAAEK,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC;AAAtD,iBAAD,CAAR;AACAL,gBAAAA,QAAQ,CAACL,WAAW,CAACQ,QAAQ,CAACC,IAAT,CAAcA,IAAd,CAAmBC,QAAnB,CAA4B,CAA5B,CAAD,CAAZ,CAAR;;AAJkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAN;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAvB","sourcesContent":["import { \n  SELECT_VIDEO,\n  FETCH_NEW_VIDEOS,\n  FETCH_HOT_VIDEOS,\n  FETCH_FIVESEVEN_VIDEOS,\n  FETCH_SEVENTEN_VIDEOS,\n  FETCH_TENFIFTEEN_VIDEOS,\n  FETCH_HALFHOUR_VIDEOS \n} \nfrom '../actions/types';\n\n\nimport reddit from '../apis/reddit';\n// https://www.reddit.com/r/mealtimevideos/search.json?q=flair_name%3A%225-7%20Minutes%22&restrict_sr=1\n\nexport const selectVideo = video => {\n  return {\n    type: 'SELECT_VIDEO',\n    payload: video\n  }\n}\n\nexport const fetchNewVideos = () => async dispatch => {\n  const response = await reddit.get('/new.json', { params: {} });\n  dispatch({ type: FETCH_NEW_VIDEOS, payload: response.data.data.children});\n  dispatch(selectVideo(response.data.data.children[0]));\n}\n\nexport const fetchHotVideos = () => async dispatch => {\n  const response = await reddit.get('search?q=flair_name%3A\"5-7%20Minutes\"&restrict_sr=1', { params: {} });\n  console.log(response.data.data.children.pop());\n  dispatch({ type: FETCH_HOT_VIDEOS, payload: response.data.data.children});\n  dispatch(selectVideo(response.data.data.children[0]));\n}\n\n"]},"metadata":{},"sourceType":"module"}