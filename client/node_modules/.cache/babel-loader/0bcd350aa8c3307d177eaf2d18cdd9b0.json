{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _possibleConstructorReturn = require(\"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _assertThisInitialized = require(\"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/assertThisInitialized\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _helpers = require('../helpers.js');\n\nvar _Listing = require('./Listing.js');\n\nvar _Listing2 = _interopRequireDefault(_Listing);\n\nvar _More = require('./More.js');\n\nvar _VoteableContent = require('./VoteableContent.js');\n\nvar _VoteableContent2 = _interopRequireDefault(_VoteableContent);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n* A class representing a reddit comment\n* <style> #Comment {display: none} </style>\n* @example\n*\n* // Get a comment with the given ID\n* r.getComment('c0hkuyq')\n*\n* @extends VoteableContent\n*/\n\n\nvar Comment =\n/*#__PURE__*/\nfunction (_VoteableContent2$def) {\n  _inherits(Comment, _VoteableContent2$def);\n\n  function Comment(options, _r, _hasFetched) {\n    var _this;\n\n    _classCallCheck(this, Comment);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Comment).call(this, options, _r, _hasFetched));\n\n    if (_hasFetched) {\n      /* If a comment is in a deep comment chain, reddit will send a single `more` object with name `t1__` in place of the\n      comment's replies. This is the equivalent of seeing a 'Continue this thread' link on the HTML site, and it indicates that\n      replies should be fetched by sending another request to view the deep comment alone, and parsing the replies from that. */\n      if (_this.replies instanceof _Listing2.default && !_this.replies.length && _this.replies._more && _this.replies._more.name === 't1__') {\n        _this.replies = (0, _helpers.getEmptyRepliesListing)(_assertThisInitialized(_assertThisInitialized(_this)));\n      } else if (_this.replies === '') {\n        /* If a comment has no replies, reddit returns an empty string as its `replies` property rather than an empty Listing.\n        This behavior is unexpected, so replace the empty string with an empty Listing. */\n        _this.replies = _this._r._newObject('Listing', {\n          children: [],\n          _more: _More.emptyChildren,\n          _isCommentList: true\n        });\n      } else if (_this.replies._more && !_this.replies._more.link_id) {\n        _this.replies._more.link_id = _this.link_id;\n      }\n    }\n\n    return _this;\n  }\n\n  _createClass(Comment, [{\n    key: \"_transformApiResponse\",\n    value: function _transformApiResponse(response) {\n      return (0, _helpers.addEmptyRepliesListing)(response[0]);\n    }\n  }, {\n    key: \"_uri\",\n    get: function get() {\n      return 'api/info?id=' + this.name;\n    }\n  }]);\n\n  return Comment;\n}(_VoteableContent2.default);\n\nexports.default = Comment;","map":null,"metadata":{},"sourceType":"script"}