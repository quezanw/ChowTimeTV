{"ast":null,"code":"'use strict';\n\nvar _classCallCheck = require(\"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _possibleConstructorReturn = require(\"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/possibleConstructorReturn\");\n\nvar _getPrototypeOf = require(\"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/getPrototypeOf\");\n\nvar _inherits = require(\"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _wrapNativeSuper = require(\"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/wrapNativeSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StatusCodeError = exports.RequestError = exports.InvalidMethodCallError = exports.NoCredentialsError = exports.InvalidUserError = exports.RateLimitError = undefined;\nexports.rateLimitWarning = rateLimitWarning;\n\nvar _constants = require('./constants.js');\n\nvar RateLimitError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(RateLimitError, _Error);\n\n  function RateLimitError() {\n    _classCallCheck(this, RateLimitError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RateLimitError).call(this, _constants.MODULE_NAME + ' refused to continue because reddit\\'s ratelimit was exceeded. For more information about reddit\\'s ratelimit, please consult reddit\\'s API rules at ' + _constants.API_RULES_LINK + '.'));\n  }\n\n  return RateLimitError;\n}(_wrapNativeSuper(Error));\n\nexports.RateLimitError = RateLimitError;\n/* eslint-disable max-len */\n\nvar InvalidUserError =\n/*#__PURE__*/\nfunction (_Error2) {\n  _inherits(InvalidUserError, _Error2);\n\n  function InvalidUserError() {\n    _classCallCheck(this, InvalidUserError);\n\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Cannot fetch information on the given user. Please be sure you have the right username.';\n    return _possibleConstructorReturn(this, _getPrototypeOf(InvalidUserError).call(this, message));\n  }\n\n  return InvalidUserError;\n}(_wrapNativeSuper(Error));\n\nexports.InvalidUserError = InvalidUserError;\n\nvar NoCredentialsError =\n/*#__PURE__*/\nfunction (_Error3) {\n  _inherits(NoCredentialsError, _Error3);\n\n  function NoCredentialsError() {\n    _classCallCheck(this, NoCredentialsError);\n\n    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'Missing credentials passed to ' + _constants.MODULE_NAME + ' constructor. You must pass an object containing either (a) userAgent, clientId, clientSecret, and refreshToken properties, (b) userAgent and accessToken properties, or (c) userAgent, clientId, clientSecret, username, and password properties. For information, please read the docs at ' + _constants.DOCS_LINK + '.';\n    return _possibleConstructorReturn(this, _getPrototypeOf(NoCredentialsError).call(this, message));\n  }\n\n  return NoCredentialsError;\n}(_wrapNativeSuper(Error));\n\nexports.NoCredentialsError = NoCredentialsError;\n\nvar InvalidMethodCallError =\n/*#__PURE__*/\nfunction (_Error4) {\n  _inherits(InvalidMethodCallError, _Error4);\n\n  function InvalidMethodCallError() {\n    _classCallCheck(this, InvalidMethodCallError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(InvalidMethodCallError).apply(this, arguments));\n  }\n\n  return InvalidMethodCallError;\n}(_wrapNativeSuper(Error));\n\nexports.InvalidMethodCallError = InvalidMethodCallError;\n\nvar RequestError =\n/*#__PURE__*/\nfunction (_Error5) {\n  _inherits(RequestError, _Error5);\n\n  function RequestError() {\n    _classCallCheck(this, RequestError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RequestError).apply(this, arguments));\n  }\n\n  return RequestError;\n}(_wrapNativeSuper(Error));\n\nexports.RequestError = RequestError;\n\nvar StatusCodeError =\n/*#__PURE__*/\nfunction (_Error6) {\n  _inherits(StatusCodeError, _Error6);\n\n  function StatusCodeError() {\n    _classCallCheck(this, StatusCodeError);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(StatusCodeError).apply(this, arguments));\n  }\n\n  return StatusCodeError;\n}(_wrapNativeSuper(Error));\n\nexports.StatusCodeError = StatusCodeError;\n\nfunction rateLimitWarning(millisecondsUntilReset) {\n  return 'Warning: ' + _constants.MODULE_NAME + ' temporarily stopped sending requests because reddit\\'s ratelimit was exceeded. The request you attempted to send was queued, and will be sent to reddit when the current ratelimit period expires in ' + millisecondsUntilReset / 1000 + ' seconds.';\n}","map":null,"metadata":{},"sourceType":"script"}