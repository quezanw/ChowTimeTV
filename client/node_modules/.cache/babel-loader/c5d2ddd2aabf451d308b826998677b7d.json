{"ast":null,"code":"import _regeneratorRuntime from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/quezan/Desktop/ChowTimeTV/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { // SELECT_VIDEO,\nFETCH_NEW_VIDEOS, FETCH_HOT_VIDEOS, FETCH_FIVESEVEN_VIDEOS, FETCH_SEVENTEN_VIDEOS, FETCH_TENFIFTEEN_VIDEOS, FETCH_HALFHOUR_VIDEOS } from '../actions/types';\nimport reddit from '../apis/reddit'; // https://www.reddit.com/r/mealtimevideos/search.json?q=flair_name%3A%225-7%20Minutes%22&restrict_sr=1\n\nexport var selectVideo = function selectVideo(video) {\n  return {\n    type: 'SELECT_VIDEO',\n    payload: video\n  };\n};\nexport var fetchNewVideos = function fetchNewVideos() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return reddit.get('/new', {\n                  params: {}\n                });\n\n              case 2:\n                response = _context.sent;\n                dispatch({\n                  type: FETCH_NEW_VIDEOS,\n                  payload: response.data.data.children\n                });\n                dispatch(selectVideo(response.data.data.children[0]));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }()\n  );\n}; // export const fetchNewVideos = () => async dispatch => {\n//   const response = await reddit.get('/new', { params: {} });\n//   console.log(response);\n//   dispatch({ type: FETCH_NEW_VIDEOS, payload: response.data.data.children});\n//   dispatch(selectVideo(response.data.data.children[0]));\n// }\n\nexport var fetchHotVideos = function fetchHotVideos() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return reddit.get('/top.json?t=day', {\n                  params: {}\n                });\n\n              case 2:\n                response = _context2.sent;\n                dispatch({\n                  type: FETCH_HOT_VIDEOS,\n                  payload: response.data.data.children\n                });\n                dispatch(selectVideo(response.data.data.children[0]));\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchFiveSevenVideos = function fetchFiveSevenVideos() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref3 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return reddit.get('/search.json?q=flair_name%3A\"5-7%20Minutes\"&restrict_sr=1', {\n                  params: {}\n                });\n\n              case 2:\n                response = _context3.sent;\n                dispatch({\n                  type: FETCH_FIVESEVEN_VIDEOS,\n                  payload: response.data.data.children\n                });\n                dispatch(selectVideo(response.data.data.children[0]));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      return function (_x3) {\n        return _ref3.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchSevenTenVideos = function fetchSevenTenVideos() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref4 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return reddit.get('/search.json?q=flair_name%3A\"7-10 Minutes\"&restrict_sr=1', {\n                  params: {}\n                });\n\n              case 2:\n                response = _context4.sent;\n                dispatch({\n                  type: FETCH_SEVENTEN_VIDEOS,\n                  payload: response.data.data.children\n                });\n                dispatch(selectVideo(response.data.data.children[0]));\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      return function (_x4) {\n        return _ref4.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchTenFifteenVideos = function fetchTenFifteenVideos() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref5 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return reddit.get('/search.json?q=flair_name%3A\"10-15 Minutes\"&restrict_sr=1', {\n                  params: {}\n                });\n\n              case 2:\n                response = _context5.sent;\n                dispatch({\n                  type: FETCH_TENFIFTEEN_VIDEOS,\n                  payload: response.data.data.children\n                });\n                dispatch(selectVideo(response.data.data.children[0]));\n\n              case 5:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      return function (_x5) {\n        return _ref5.apply(this, arguments);\n      };\n    }()\n  );\n};\nexport var fetchHalfHourVideos = function fetchHalfHourVideos() {\n  return (\n    /*#__PURE__*/\n    function () {\n      var _ref6 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(dispatch) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                _context6.next = 2;\n                return reddit.get('/search.json?q=flair_name%3A\"30 Minutes Plus\"&restrict_sr=1', {\n                  params: {}\n                });\n\n              case 2:\n                response = _context6.sent;\n                dispatch({\n                  type: FETCH_HALFHOUR_VIDEOS,\n                  payload: response.data.data.children\n                });\n                dispatch(selectVideo(response.data.data.children[0]));\n\n              case 5:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      return function (_x6) {\n        return _ref6.apply(this, arguments);\n      };\n    }()\n  );\n};","map":{"version":3,"sources":["/home/quezan/Desktop/ChowTimeTV/client/src/actions/index.js"],"names":["FETCH_NEW_VIDEOS","FETCH_HOT_VIDEOS","FETCH_FIVESEVEN_VIDEOS","FETCH_SEVENTEN_VIDEOS","FETCH_TENFIFTEEN_VIDEOS","FETCH_HALFHOUR_VIDEOS","reddit","selectVideo","video","type","payload","fetchNewVideos","dispatch","get","params","response","data","children","fetchHotVideos","fetchFiveSevenVideos","fetchSevenTenVideos","fetchTenFifteenVideos","fetchHalfHourVideos"],"mappings":"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","sourcesContent":["import { \n  // SELECT_VIDEO,\n  FETCH_NEW_VIDEOS,\n  FETCH_HOT_VIDEOS,\n  FETCH_FIVESEVEN_VIDEOS,\n  FETCH_SEVENTEN_VIDEOS,\n  FETCH_TENFIFTEEN_VIDEOS,\n  FETCH_HALFHOUR_VIDEOS \n} \nfrom '../actions/types';\n\n\nimport reddit from '../apis/reddit';\n// https://www.reddit.com/r/mealtimevideos/search.json?q=flair_name%3A%225-7%20Minutes%22&restrict_sr=1\n\nexport const selectVideo = video => {\n  return {\n    type: 'SELECT_VIDEO',\n    payload: video\n  }\n}\n\nexport const fetchNewVideos = () => async dispatch => {\n  const response = await reddit.get('/new', { params: {} });\n  dispatch({ type: FETCH_NEW_VIDEOS, payload: response.data.data.children});\n  dispatch(selectVideo(response.data.data.children[0]));\n}\n\n// export const fetchNewVideos = () => async dispatch => {\n//   const response = await reddit.get('/new', { params: {} });\n//   console.log(response);\n//   dispatch({ type: FETCH_NEW_VIDEOS, payload: response.data.data.children});\n//   dispatch(selectVideo(response.data.data.children[0]));\n// }\n\nexport const fetchHotVideos = () => async dispatch => {\n  const response = await reddit.get('/top.json?t=day', { params: {} });\n  dispatch({ type: FETCH_HOT_VIDEOS, payload: response.data.data.children});\n  dispatch(selectVideo(response.data.data.children[0]));\n}\n\n\nexport const fetchFiveSevenVideos = () => async dispatch => {\n  const response = await reddit.get('/search.json?q=flair_name%3A\"5-7%20Minutes\"&restrict_sr=1', { params: {} });\n  dispatch({ type: FETCH_FIVESEVEN_VIDEOS, payload: response.data.data.children});\n  dispatch(selectVideo(response.data.data.children[0]));\n}\n\nexport const fetchSevenTenVideos = () => async dispatch => {\n  const response = await reddit.get('/search.json?q=flair_name%3A\"7-10 Minutes\"&restrict_sr=1', { params: {} });\n  dispatch({ type: FETCH_SEVENTEN_VIDEOS, payload: response.data.data.children});\n  dispatch(selectVideo(response.data.data.children[0]));\n\n}\nexport const fetchTenFifteenVideos = () => async dispatch => {\n  const response = await reddit.get('/search.json?q=flair_name%3A\"10-15 Minutes\"&restrict_sr=1', { params: {} });\n  dispatch({ type: FETCH_TENFIFTEEN_VIDEOS, payload: response.data.data.children});\n  dispatch(selectVideo(response.data.data.children[0]));\n}\n\nexport const fetchHalfHourVideos = () => async dispatch => {\n  const response = await reddit.get('/search.json?q=flair_name%3A\"30 Minutes Plus\"&restrict_sr=1', { params: {} });\n  dispatch({ type: FETCH_HALFHOUR_VIDEOS, payload: response.data.data.children});\n  dispatch(selectVideo(response.data.data.children[0]));\n}\n\n"]},"metadata":{},"sourceType":"module"}